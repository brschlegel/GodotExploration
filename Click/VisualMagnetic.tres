[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://cwiuhvx6nr8m7"]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_06gq6"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_q4qqe"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_2rdi4"]
default_input_values = [0, 0.0, 1, 100.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_rkk80"]
default_input_values = [0, 0.0, 1, 0.1]
operator = 4

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_1v8ao"]
expanded_output_ports = [0]
constant = Color(0, 0.452354, 0.452353, 1)

[resource]
code = "shader_type canvas_item;



void fragment() {
// UVFunc:2
	vec2 n_in2p1 = vec2(1.00000, 1.00000);
	vec2 n_in2p2 = vec2(0.00000, 0.00000);
	vec2 n_out2p0 = fma(n_in2p2, n_in2p1, UV);


// FloatOp:4
	float n_in4p1 = 100.00000;
	float n_out4p0 = n_out2p0.x * n_in4p1;


// FloatOp:5
	float n_in5p1 = 0.10000;
	float n_out5p0 = mod(n_out4p0, n_in5p1);


// ColorConstant:6
	vec4 n_out6p0 = vec4(0.000000, 0.452354, 0.452353, 1.000000);


	vec3 n_out3p0;
// If:3
	float n_in3p1 = 0.00000;
	float n_in3p2 = 0.00001;
	vec3 n_in3p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in3p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out5p0 - n_in3p1) < n_in3p2)
	{
		n_out3p0 = n_in3p3;
	}
	else if(n_out5p0 < n_in3p1)
	{
		n_out3p0 = n_in3p5;
	}
	else
	{
		n_out3p0 = vec3(n_out6p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out3p0;


}
"
graph_offset = Vector2(113.667, -300)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1040, -260)
nodes/fragment/2/node = SubResource("VisualShaderNodeUVFunc_06gq6")
nodes/fragment/2/position = Vector2(60, -300)
nodes/fragment/3/node = SubResource("VisualShaderNodeIf_q4qqe")
nodes/fragment/3/position = Vector2(800, -200)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_2rdi4")
nodes/fragment/4/position = Vector2(320, -280)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatOp_rkk80")
nodes/fragment/5/position = Vector2(560, -180)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorConstant_1v8ao")
nodes/fragment/6/position = Vector2(340, -20)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 4, 0, 5, 0, 5, 0, 3, 0, 3, 0, 0, 0, 6, 0, 3, 4)
